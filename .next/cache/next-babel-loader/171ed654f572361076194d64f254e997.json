{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst CONNEXION_STATUS = {\n  connected: false\n};\n\nfunction connexionReducer(state = CONNEXION_STATUS, action) {\n  switch (action.type) {\n    case 'CONNECTED':\n      return _objectSpread({}, state, {\n        connected: true\n      });\n\n    case 'DISCONNECTED':\n      return _objectSpread({}, state, {\n        connected: false\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default connexionReducer;","map":{"version":3,"sources":["C:/Projet Perso/flowflow-comme-ronaldo/src/Reducer/connexionReducer.js"],"names":["CONNEXION_STATUS","connected","connexionReducer","state","action","type"],"mappings":";;;;;;AACA,MAAMA,gBAAgB,GAAE;AACpBC,EAAAA,SAAS,EAAC;AADU,CAAxB;;AAGA,SAASC,gBAAT,CAA2BC,KAAK,GAAGH,gBAAnC,EAAqDI,MAArD,EAA6D;AACzD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAI,WAAJ;AACA,+BACOF,KADP;AAEIF,QAAAA,SAAS,EAAC;AAFd;;AAIA,SAAK,cAAL;AACA,+BACOE,KADP;AAEIF,QAAAA,SAAS,EAAC;AAFd;;AAKA;AACA,aAAOE,KAAP;AAdJ;AAiBH;;AACD,eAAeD,gBAAf","sourcesContent":["\r\nconst CONNEXION_STATUS= {\r\n    connected:false\r\n}\r\nfunction connexionReducer (state = CONNEXION_STATUS, action ){\r\n    switch(action.type)\r\n    {\r\n        case'CONNECTED':\r\n        return{\r\n            ...state,\r\n            connected:true\r\n        };\r\n        case 'DISCONNECTED':\r\n        return{\r\n            ...state,\r\n            connected:false\r\n        };\r\n\r\n        default:\r\n        return state;\r\n\r\n    }\r\n}\r\nexport default connexionReducer"]},"metadata":{},"sourceType":"module"}