{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Projet Perso\\\\flowflow-comme-ronaldo\\\\src\\\\Compenent\\\\Inscriptions-Connexions\\\\Connexion.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ConnectMethod from './ConnectMethod';\nexport default function Connexion() {\n  const dispatch = useDispatch();\n  const {\n    connected\n  } = useSelector(state => _objectSpread({}, state.connexionReducer));\n\n  const goToConnect = e => {\n    e.preventDefault();\n    /*\r\n    J'ai Utilisé la variable verification pour simuler une connexion\r\n    pour test REDUX -> C'est ok\r\n    logiquement avec ces méthodes on peut se connecter de partout et réutilisable a volonté.\r\n    Delete ce commentaire quand tu l'aura lu bg\r\n    */\n\n    const verification = true;\n\n    if (verification) {\n      dispatch({\n        type: 'CONNECTED'\n      });\n    } else {\n      dispatch({\n        type: 'DISCONNECTED'\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Connexion\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Status : \", connected ? \"Connecté\" : \"Déconnecté\"), __jsx(\"form\", {\n    onSubmit: goToConnect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Email: \"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"Votre e-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 88\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"mdp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Mot de Passe: \"), __jsx(\"input\", {\n    type: \"password\",\n    name: \"mdp\",\n    id: \"mdp\",\n    placeholder: \"Votre Mot de passe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 94\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Connexion\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 57\n    }\n  }), __jsx(\"a\", {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"S'inscrire?\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 44\n    }\n  }), __jsx(\"a\", {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Mot de passe oubli\\xE9?\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Se connecter avec : \"), __jsx(ConnectMethod, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Projet Perso/flowflow-comme-ronaldo/src/Compenent/Inscriptions-Connexions/Connexion.js"],"names":["React","useSelector","useDispatch","ConnectMethod","Connexion","dispatch","connected","state","connexionReducer","goToConnect","e","preventDefault","verification","type"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,eAAe,SAASC,SAAT,GAAqB;AAChC,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM;AAACI,IAAAA;AAAD,MAAcL,WAAW,CAACM,KAAK,sBAAQA,KAAK,CAACC,gBAAd,CAAN,CAA/B;;AACA,QAAMC,WAAW,GAAEC,CAAD,IAAM;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA;;;;;;;AAMA,UAAMC,YAAY,GAAG,IAArB;;AACA,QAAGA,YAAH,EAAgB;AACZP,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAC;AADA,OAAD,CAAR;AAGH,KAJD,MAKI;AACAR,MAAAA,QAAQ,CAAC;AACLQ,QAAAA,IAAI,EAAC;AADA,OAAD,CAAR;AAGH;AACJ,GAnBD;;AAsBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaP,SAAS,GAAG,UAAH,GAAgB,YAAtC,CAFJ,EAGI;AAAM,IAAA,QAAQ,EAAEG,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,EAAE,EAAC,OAAnC;AAA2C,IAAA,WAAW,EAAC,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAE2E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF3E,EAGI;AAAO,IAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,EAII;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,KAA5B;AAAkC,IAAA,EAAE,EAAC,KAArC;AAA2C,IAAA,WAAW,EAAC,oBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAIiF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJjF,EAKI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,EAK4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL5C,EAMI;AAAG,IAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,EAM+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAN/B,EAOI;AAAG,IAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAPJ,CAHJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAZJ,CADJ;AAmBH","sourcesContent":["import React from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport ConnectMethod from './ConnectMethod'\r\n\r\nexport default function Connexion() {\r\n    const dispatch = useDispatch()\r\n    const {connected} = useSelector(state=> ({...state.connexionReducer}))\r\n    const goToConnect=(e)=> {\r\n        e.preventDefault()\r\n        /*\r\n        J'ai Utilisé la variable verification pour simuler une connexion\r\n        pour test REDUX -> C'est ok\r\n        logiquement avec ces méthodes on peut se connecter de partout et réutilisable a volonté.\r\n        Delete ce commentaire quand tu l'aura lu bg\r\n        */\r\n        const verification = true\r\n        if(verification){\r\n            dispatch({\r\n                type:'CONNECTED'\r\n            })\r\n        }\r\n        else{\r\n            dispatch({\r\n                type:'DISCONNECTED'\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Connexion</h1>\r\n            <p>Status : {connected ? \"Connecté\" : \"Déconnecté\"}</p>\r\n            <form onSubmit={goToConnect}>\r\n                <label htmlFor=\"email\">Email: </label>\r\n                <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Votre e-mail\"/><br/>\r\n                <label htmlFor=\"mdp\">Mot de Passe: </label>\r\n                <input type=\"password\" name=\"mdp\" id=\"mdp\" placeholder=\"Votre Mot de passe\"/><br/>\r\n                <button type=\"submit\">Connexion</button><br/>\r\n                <a href=\"/\">S'inscrire?</a><br/>\r\n                <a href=\"/\">Mot de passe oublié?</a>\r\n            </form>\r\n            <div>\r\n                <p>Se connecter avec : </p>\r\n                <ConnectMethod/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}