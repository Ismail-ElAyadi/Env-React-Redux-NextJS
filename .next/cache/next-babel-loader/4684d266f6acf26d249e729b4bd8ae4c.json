{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projet Perso\\\\flowflow-comme-ronaldo\\\\src\\\\Compenent\\\\Inscriptions-Connexions\\\\Connexion.js\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ConnectMethod from './ConnectMethod';\nimport Router from 'next/router';\nimport dynamic from \"next/dynamic\";\nconst LoginPage = dynamic(() => import(\"./login\"), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"./login\")],\n    modules: [\"./login\"]\n  }\n});\nexport default function Connexion() {\n  const dispatch = useDispatch();\n  const {\n    connected\n  } = useSelector(state => _objectSpread({}, state.connexionReducer));\n\n  const goToConnect = e => {\n    e.preventDefault();\n    const verification = true;\n\n    if (verification) {\n      dispatch({\n        type: 'CONNECTED'\n      });\n    } else {\n      dispatch({\n        type: 'DISCONNECTED'\n      });\n    }\n  };\n\n  if (connected) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"Connexion\"), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"Status : \", connected ? \"Connecté\" : \"Déconnecté\"), __jsx(\"form\", {\n      onSubmit: goToConnect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, __jsx(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Email: \"), __jsx(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"Votre e-mail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 88\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"mdp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"Mot de Passe: \"), __jsx(\"input\", {\n      type: \"password\",\n      name: \"mdp\",\n      id: \"mdp\",\n      placeholder: \"Votre Mot de passe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 94\n      }\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"Connexion\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 57\n      }\n    }), __jsx(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"S'inscrire?\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 44\n      }\n    }), __jsx(\"a\", {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"Mot de passe oubli\\xE9?\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Se connecter avec : \"), __jsx(ConnectMethod, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    })));\n  } else {\n    function PrivatePage(_ref) {\n      let {\n        loggedIn\n      } = _ref,\n          props = _objectWithoutProperties(_ref, [\"loggedIn\"]);\n\n      // some hooks here that need to be before the condition\n      if (!loggedIn) return __jsx(LoginPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 35\n        }\n      }); // the JSX the private page will render\n    }\n  }\n}","map":{"version":3,"sources":["C:/Projet Perso/flowflow-comme-ronaldo/src/Compenent/Inscriptions-Connexions/Connexion.js"],"names":["React","useSelector","useDispatch","ConnectMethod","Router","dynamic","LoginPage","Connexion","dispatch","connected","state","connexionReducer","goToConnect","e","preventDefault","verification","type","PrivatePage","loggedIn","props"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport ConnectMethod from './ConnectMethod'\r\nimport Router from 'next/router'\r\nimport dynamic from \"next/dynamic\";\r\nconst LoginPage = dynamic(() => import(\"./login\"));\r\n\r\nexport default function Connexion() {\r\n    const dispatch = useDispatch()\r\n    const {connected} = useSelector(state=> ({...state.connexionReducer}))\r\n    const goToConnect=(e)=> {\r\n        e.preventDefault()\r\n        const verification = true\r\n        if(verification){\r\n            dispatch({\r\n                type:'CONNECTED'\r\n            })\r\n\r\n        }\r\n        else{\r\n            dispatch({\r\n                type:'DISCONNECTED'\r\n            })\r\n        }\r\n    }\r\n\r\n    if(connected){\r\n    return (\r\n        <div>\r\n            <h1>Connexion</h1>\r\n            <p>Status : {connected ? \"Connecté\" : \"Déconnecté\"}</p>\r\n            <form onSubmit={goToConnect}>\r\n                <label htmlFor=\"email\">Email: </label>\r\n                <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Votre e-mail\"/><br/>\r\n                <label htmlFor=\"mdp\">Mot de Passe: </label>\r\n                <input type=\"password\" name=\"mdp\" id=\"mdp\" placeholder=\"Votre Mot de passe\"/><br/>\r\n                <button type=\"submit\">Connexion</button><br/>\r\n                <a href=\"/\">S'inscrire?</a><br/>\r\n                <a href=\"/\">Mot de passe oublié?</a>\r\n            </form>\r\n            <div>\r\n                <p>Se connecter avec : </p>\r\n                <ConnectMethod/>\r\n            </div>\r\n        </div>\r\n    )\r\n    }\r\n    else{\r\n        function PrivatePage({ loggedIn, ...props }) {\r\n            // some hooks here that need to be before the condition\r\n            if (!loggedIn) return <LoginPage />;\r\n            // the JSX the private page will render\r\n          }\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}